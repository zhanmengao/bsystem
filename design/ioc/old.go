package main

import (
	"fmt"
)

/*
其中控制反转（IOC）最常见的方式就叫做依赖注入。将依赖的类作为行参放入依赖中的类就成为依赖注入。
用一句大白话来说，一个实例化的对象，本来我接受各种参数来构造一个对象，现在只接受一个参数，对对象的依赖是注入进来的，和它的构造方式解耦了。构造他这个控制操作也交给了第三方，即控制反转。
举个例子：go中是没有类的概念的，以结构体的形式体现。假设我们现在船类，有个浆类，我们现在想要设置该船有12个浆，那我们可以写出如下代码：
*/
func main() {
	p := NewPulpCount(12)
	s := NewShip(p)
	fmt.Println(s.pulp.count)
}
