// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	context "context"

	storage_v1 "github.com/jaegertracing/jaeger/proto-gen/storage_v1"
	mock "github.com/stretchr/testify/mock"
)

// SpanWriterPluginServer is an autogenerated mock type for the SpanWriterPluginServer type
type SpanWriterPluginServer struct {
	mock.Mock
}

// Close provides a mock function with given fields: _a0, _a1
func (_m *SpanWriterPluginServer) Close(_a0 context.Context, _a1 *storage_v1.CloseWriterRequest) (*storage_v1.CloseWriterResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *storage_v1.CloseWriterResponse
	if rf, ok := ret.Get(0).(func(context.Context, *storage_v1.CloseWriterRequest) *storage_v1.CloseWriterResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage_v1.CloseWriterResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *storage_v1.CloseWriterRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WriteSpan provides a mock function with given fields: _a0, _a1
func (_m *SpanWriterPluginServer) WriteSpan(_a0 context.Context, _a1 *storage_v1.WriteSpanRequest) (*storage_v1.WriteSpanResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *storage_v1.WriteSpanResponse
	if rf, ok := ret.Get(0).(func(context.Context, *storage_v1.WriteSpanRequest) *storage_v1.WriteSpanResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage_v1.WriteSpanResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *storage_v1.WriteSpanRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
