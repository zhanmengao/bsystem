; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "VEIDP Client"
#define MyAppVersion "0.9.5"
#define MyAppPublisher "VEsystem"
#define MyAppURL "http://www.vesystem.com/"
#define MyAppExeName "veidp.exe"
#define MyConfigExeName "VeidpConfig.exe"
#define MyServiceExeName "smve.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{DCA6D7F5-9FDB-4B51-BC4A-F1D5AA174222}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
;DefaultDirName={autopf}\{#MyAppName}
DefaultDirName=C:\VEIDP
DisableDirPage=Yes
;DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=VEIDPClient
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin

[Languages]
;Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "Chinese"; MessagesFile: "compiler:Languages\Chinese.isl"


;[Tasks]
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
;Source: "D:\Space\System\SystemInfo\VEIDP\Release\AIDA64_v6.32.5600.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; 
Source: "D:\Space\System\SystemInfo\VEIDP\Release\aida64business\*"; DestDir: "{app}\aida64business"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\smve.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\veidp.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\VeidpConfig.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\rocketmq-client-cpp.dll"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\libcurl.dll"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\libcrypto-1_1.dll"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\libssl-1_1.dll"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\veidp.ini"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\config.ini"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\stop.bat"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\InvalidVal.txt"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\Uninstall.bat"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "D:\Space\System\SystemInfo\VEIDP\Release\ChangeLog"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs;

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

;[Icons]
;Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
;Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

;[Registry]
;Root: HKLM; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Run"; ValueType: string; ValueName: "testrun"; ValueData: "{app}\{#MyAppExeName}"

[Run]
;Filename: "{app}\{#MyServiceExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait skipifsilent
Filename: "{app}\{#MyServiceExeName}"; Parameters: install; WorkingDir: {src}; StatusMsg: "正在安装 smve 服务...";Flags: RunHidden;

[code]

function StopUAC():Boolean;
var
  ErrorCode: Integer;
  strInstrc: string;
  strBatName: string;
begin
  //RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet001\Control\Power', 'HibernateEnable', 00000000);
  RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System', 'EnableLUA', 00000000);
  //RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Policies\Microsoft\Windows NT\SystemRestore', 'DisableConfig',00000001); 
  //RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Policies\Microsoft\Windows\Psched', 'NonBestEffortLimit',0);
  strBatName := ExpandConstant('{tmp}')+'\SetPowercfg.bat';

  //关闭电源休眠模式
  strInstrc := strInstrc + 'powercfg -h off' + #13#10;
  SaveStringToFile(strBatName, strInstrc, FALSE);
  if not ShellExec('open', strBatName, '', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
  begin
    MsgBox(SysErrorMessage(ErrorCode), mbInformation, MB_OK);
    Result :=false;
  end
  else
  Result := true;
  DeleteFile(strBatName);
end;

procedure CurStepChanged(CurStep: TSetupStep); 
var
  ErrorCode: Integer;
  uninstallBat: string;
begin
  if CurStep = ssInstall then
  begin
    // MsgBox('ssInstall', mbConfirmation, MB_OKCANCEL);
  end;

  if CurStep = ssPostInstall then
  begin
    StopUAC();
    
  end;

end;

function InitializeSetup(): Boolean; 
var
  uninstallBat: string;
  ErrorCode: Integer;
begin  
  Result :=true; //安装程序继续  
  uninstallBat := 'C:\VEIDP\Uninstall.bat'; 
  if not ShellExec('open', uninstallBat, '', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
  begin
    //MsgBox(SysErrorMessage(ErrorCode), 'Error', MB_OK);
  end; 
end;  

//卸载安装////////////////////////////////////////////////////////////////////////////////////////////////////

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  ErrorCode: Integer;
  configFile: string;
  ReportSUMName: string;
  ReportHMName: string;
  CacheName: string;
  log: string;
  uninstallBat: string;
begin

  if CurUninstallStep = usUninstall then
  begin
      uninstallBat := ExpandConstant('{app}')+'\Uninstall.bat'; 
      if not ShellExec('open', uninstallBat, '', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
      begin
        //MsgBox(SysErrorMessage(ErrorCode), 'Error', MB_OK);
      end;

      //if MsgBox('您是否保留配置信息？', mbConfirmation, MB_YESNO) = IDNO then
      //begin
        //collectionName := ExpandConstant('{app}')+'\veidp.ini';
        //ReportName := ExpandConstant('{app}')+'\aida64business\Reports\Report.ini';
        //log := ExpandConstant('{app}')+'\log\*';

        //DelTree(ExpandConstant('{app}') +'\aida64business' , True, True, True);
        //configFile := ExpandConstant('{app}')+'\config.ini';
        //DeleteFile(configFile);
        //DeleteFile(ReportName);
        //DelTree(ExpandConstant('{app}'), True, True, True)

     // end;
      ReportSUMName := ExpandConstant('{app}')+'\sum.ini';
      DeleteFile(ReportSUMName);

      ReportHMName := ExpandConstant('{app}')+'\hw.ini';
      DeleteFile(ReportHMName);

      CacheName := ExpandConstant('{app}')+'\PacketCache';
      DeleteFile(CacheName);
  end;

end;












